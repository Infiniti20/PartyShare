{
  "version": 3,
  "sources": ["../app/utils.ts", "../app/index.ts", "../app/database.ts", "../app/cache.ts"],
  "sourcesContent": ["const crypto = require('crypto');\r\nconst fs = require(\"fs\")\r\n\r\n\r\n\r\nexport default {\r\n\tcomputeHash: function (text: string):string {\r\n\t\tconst hash = crypto.createHash('sha256').update(text).digest('base64');\r\n\t\treturn hash\r\n\t},\r\n\tgenerateUID: function (pattern?: string):string {\r\n\t\treturn 'xxxxxxxx-xxxx-4xxxx-xxx-x'.replace(/[xy]/g, function (c) {\r\n\t\t\tvar r = Math.random() * 16 | 0,\r\n\t\t\t\tv = c == 'x' ? r : (r & 0x3 | 0x8);\r\n\t\t\treturn v.toString(16);\r\n\t\t});\r\n\t},\r\n\tfilter: function (req: any, file: any, cb: any) {\r\n\t\t// Accept images only\r\n\t\tif (!file.originalname.match(/\\.(jpg|JPG|jpeg|JPEG|png|PNG|jfif|JFIF|webm|WEBM)$/)) {\r\n\t\t\treq.fileValidationError = 'Only image files are allowed';\r\n\t\t\treturn cb(new Error('Only image files are allowed'), false);\r\n\t\t}\r\n\t\tcb(null, true);\r\n\t},\r\n\tgetExt: function (filename:string):string {\r\n\t\tvar i = filename.lastIndexOf('.');\r\n\t\treturn (i < 0) ? '' : filename.substr(i);\r\n\t},\r\n\treplaceValues: function (str:string, values: any):string {\r\n\t\tvar str = str.replace(/\\[\\w*\\]/g, function (match, val) {\r\n\t\t\treturn values[match.slice(1, -1)] || match;\r\n\t\t});\r\n\t\treturn str\r\n\t},\r\n\tgetFileStream: async function (path: string){\r\n\t\tlet reader = fs.createReadStream(path);\r\n\r\n\t\tlet promise = new Promise(function (resolve, reject) {\r\n\t\t\treader.on('data', (chunk: Buffer) => resolve(chunk.toString()));\r\n\t\t\treader.on('error', reject); \r\n\t\t});\r\n\r\n\t\tlet data = await promise;\r\n\t\treturn data\r\n\t}\r\n\r\n}\r\n", "import utils from \"./utils\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\nconst URL = \"http://partyshare.ca\";\r\n\r\n// Database setup\r\nimport { Database } from \"./database\";\r\nimport { order, account, customer, product } from \"./types\";\r\nconst db = new Database(\"database/partyshare.db\");\r\n\r\nasync function createDB() {\r\n  db.exec(\r\n    \"CREATE TABLE IF NOT EXISTS accounts ( id varchar(25) PRIMARY KEY, name varchar(100), email varchar(80), authID varchar(28), location varchar(250) ) \"\r\n  );\r\n  db.exec(\r\n    \"CREATE TABLE IF NOT EXISTS products ( name varchar(75), id varchar(25), accountID varchar(25), imageURL varchar(55), category varchar(12), desc varchar(250), info varchar(200), quantity int, price int )\"\r\n  );\r\n}\r\n\r\ncreateDB();\r\n\r\nimport { CacheLayer } from \"./cache\";\r\nconst cache = new CacheLayer();\r\n\r\n//Express imports\r\nimport express from \"express\";\r\nimport cookieParser from \"cookie-parser\";\r\n\r\nconst app = express();\r\n\r\n//Express addons for parsing data from the request\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(cookieParser());\r\napp.set(\"view engine\", \"ejs\");\r\napp.use(\"/views\", express.static(\"views\"));\r\n\r\n//Firebase Setup\r\nimport firebase from \"firebase-admin\";\r\nimport adminSDK from \"../admin-sdk.json\";\r\n\r\nfirebase.initializeApp({\r\n  credential: firebase.credential.cert(adminSDK as firebase.ServiceAccount),\r\n  storageBucket: process.env.BUCKET_URL,\r\n});\r\n\r\nconst firedb = firebase.firestore();\r\napp.locals.bucket = firebase.storage().bucket();\r\n\r\n//Stripe setup\r\nimport Stripe from \"stripe\";\r\n\r\nconst stripe = new Stripe(process.env.STRIPE_KEY, {\r\n  apiVersion: \"2020-08-27\",\r\n});\r\n\r\n//Sharp setup\r\nimport sharp from \"sharp\";\r\n\r\n//Multer setup\r\nimport multer from \"multer\";\r\nconst upload = multer({\r\n  storage: multer.memoryStorage(),\r\n  fileFilter: utils.filter,\r\n});\r\n\r\n// ! TEMP\r\nimport sourcemap from \"source-map-support\";\r\nsourcemap.install();\r\n\r\n// ! Functions\r\nasync function authWithCookies(\r\n  idToken: string,\r\n  days: number,\r\n  res: express.Response\r\n): Promise<void> {\r\n  const expiresIn = 60 * 60 * 24 * days * 1000;\r\n\r\n  let sessionCookie = await firebase\r\n    .auth()\r\n    .createSessionCookie(idToken, { expiresIn });\r\n\r\n  const options = { maxAge: expiresIn }; // httpOnly: true, secure: true };\r\n  res.cookie(\"session\", sessionCookie, options);\r\n}\r\n\r\nasync function verifyCookie(sessionCookie: string): Promise<string> {\r\n  const data = await firebase\r\n    .auth()\r\n    .verifySessionCookie(sessionCookie || \"\")\r\n    .catch(() => {\r\n      return null;\r\n    });\r\n\r\n  return data.uid || null;\r\n}\r\n\r\nasync function getUser(uid: string): Promise<account> {\r\n  return (await cache.getAsync(uid, async () => {\r\n    return await db.get(\"SELECT * FROM accounts WHERE authID = ?\", uid);\r\n  })) as account;\r\n}\r\n\r\n// ! Routes\r\n\r\n// * HTML REQUESTS\r\napp.get(\"/\", async (req, res) => {\r\n  const products = (await cache.getAsync(\"explore\", async () => {\r\n    return await db.all(\"SELECT id, name, imageURL, price FROM products\");\r\n  })) as product[];\r\n  res.render(\"main/index\", { acc: req.cookies.session, products });\r\n});\r\n\r\napp.get(\"/search\", async (req, res) => {\r\n  const products = (await db.all(\r\n    \"SELECT id, name, imageURL, price FROM products WHERE name LIKE ? AND category LIKE ?\",\r\n    `%${req.query.query}%`,\r\n    `%${req.query.category || \"\"}%`\r\n  )) as product;\r\n  res.render(\"main/index\", { acc: req.cookies.session, products });\r\n});\r\n\r\napp.get(\"/products/:id\", async (req, res) => {\r\n  let cachedFireData = await cache.getAsync(\r\n    `fire-${req.params.id}`,\r\n    async () => {\r\n      const firedata = await firedb\r\n        .collection(\"products\")\r\n        .doc(req.params.id)\r\n        .get();\r\n      return firedata.data();\r\n    },\r\n    1209600000\r\n  );\r\n\r\n  const product = (await cache.getAsync(req.params.id, async () => {\r\n    return await db.get(\"SELECT * FROM products WHERE id = ?\", req.params.id);\r\n  })) as product;\r\n\r\n  const account = (await cache.getAsync(product.accountID, async () => {\r\n    return await db.get(\r\n      \"SELECT * FROM accounts WHERE id = ?\",\r\n      product.accountID\r\n    );\r\n  })) as account;\r\n\r\n  res.render(\"products/index\", {\r\n    product,\r\n    account,\r\n    dates: cachedFireData,\r\n    acc: req.cookies.session,\r\n  });\r\n});\r\n\r\napp.get(\"/faq\", async (req, res) => {\r\n  res.render(\"faq/index\", {\r\n    acc: req.cookies.session,\r\n    faqs: [\r\n      {\r\n        title: \"How do I start renting on PartyShare?\",\r\n        text: \"You can contact me at janakhosa@gmail.com to get in touch, and we can help you set up your account!\",\r\n      },\r\n      {\r\n        title: \"What information does PartyShare store about me?\",\r\n        text: \"PartyShare only stores your email address and nothing else! This is just to contact you about your order, and give you updates on it.\",\r\n      },\r\n    ],\r\n  });\r\n});\r\n\r\napp.get(\"/vendor-login\", async (req, res) => {\r\n  res.render(\"vendor-login/index\", { acc: req.cookies.session });\r\n});\r\n\r\napp.get(\"/add/product\", async (req, res) => {\r\n  const uid = await verifyCookie(req.cookies.session);\r\n\r\n  if (uid == null) {\r\n    res.redirect(\"/\");\r\n  }\r\n\r\n  const user = await getUser(uid);\r\n\r\n  res.render(\"add/index\", { name: user.name });\r\n});\r\n\r\napp.get(\"/checkout\", (req, res) => {\r\n  console.log(cache.get(`tempcache-${req.cookies.customerID}`, ()=>{}))\r\n    // res.render(\"checkout/index\", {acc:req.cookies.session, secret: intent.client_secret, product, info: {quantity, daysRented} })\r\n\r\n});\r\n\r\napp.get(\"/accounts/create\", async (req, res) => {\r\n  const hash = utils.computeHash(Math.random().toString()).replace(\"/\", \"|\");\r\n  const account = await stripe.accounts.create({\r\n    type: \"express\",\r\n    country: \"CA\",\r\n    business_type: \"individual\",\r\n  });\r\n\r\n  const accountLinks = await stripe.accountLinks.create({\r\n    account: account.id,\r\n    refresh_url: `${URL}/accounts/create`,\r\n    return_url: `${URL}/accounts/create/${hash}`,\r\n    type: \"account_onboarding\",\r\n  });\r\n\r\n  res.cookie(\"stripeID\", account.id);\r\n  res.redirect(accountLinks.url);\r\n});\r\n\r\napp.get(\"/accounts/create/:hash\", async (req, res) => {\r\n  res.render(\"create-account/index\");\r\n});\r\n\r\n// * POST REQUESTS\r\napp.post(\"/accounts/login\", async (req, res) => {\r\n  console.log(req.body);\r\n  let idToken = req.body.idToken;\r\n\r\n  await authWithCookies(idToken, 14, res);\r\n\r\n  res.end(JSON.stringify({ status: \"success\" }));\r\n});\r\n\r\napp.post(\"/accounts/create\", async (req, res) => {\r\n  let idToken = req.body.idToken;\r\n  const authID = (await firebase.auth().verifyIdToken(idToken)).uid;\r\n\r\n  await authWithCookies(idToken, 14, res);\r\n\r\n  const account: account = {\r\n    id: req.cookies.stripeID,\r\n    name: req.body.name,\r\n    email: req.body.email,\r\n    authID,\r\n    location: req.body.location,\r\n  };\r\n  await db.run(\r\n    \"INSERT INTO accounts VALUES (?, ?, ?, ?, ?);\",\r\n    ...Object.values(account)\r\n  );\r\n\r\n  res.clearCookie(\"stripeID\");\r\n  res.end(JSON.stringify({ status: \"completed\" }));\r\n});\r\n\r\napp.post(\"/products/create\", upload.single(\"image\"), async (req, res) => {\r\n  const uid = await verifyCookie(req.cookies.session);\r\n\r\n  if (uid == null) {\r\n    res.redirect(\"/\");\r\n  }\r\n\r\n  const user = await getUser(uid);\r\n\r\n  let name = `${utils\r\n    .computeHash(req.file.originalname + Math.random())\r\n    .replace(/\\//g, \"|\")}.jpeg`;\r\n\r\n  const sharpFile = await sharp(req.file.buffer)\r\n    .resize({ width: 350, height: 350 })\r\n    .jpeg({ quality: 70 })\r\n    .toBuffer();\r\n  await app.locals.bucket.file(name).createWriteStream().end(sharpFile);\r\n\r\n  const productID = utils.generateUID();\r\n\r\n  await db.run(\r\n    \"INSERT INTO products VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\",\r\n    req.body[\"desktop-name\"] || req.body[\"mobile-name\"],\r\n    productID,\r\n    user.id,\r\n    name,\r\n    req.body.category,\r\n    req.body.desc,\r\n    req.body.info,\r\n    parseInt(req.body.quantity),\r\n    parseInt(req.body.price.substring(1)) * 100\r\n  );\r\n\r\n  cache.del(\"explore\");\r\n\r\n  await firedb.collection(\"products\").doc(productID).set({\r\n    \"1263310860\": 1,\r\n  });\r\n\r\n  cache.set(`fire-${productID}`, {\r\n    \"1263310860\": 1,\r\n  });\r\n\r\n  res.json({ message: \"Product successfully added.\" });\r\n});\r\n\r\napp.post(\"/checkout\", async (req, res) => {\r\n  // ! ADD DATE VERIFICATION HERE\r\n  const customer = await stripe.customers.create();\r\n  const intent = await stripe.setupIntents.create({\r\n    customer: customer.id,\r\n  });\r\n\r\n  const session = cache.set(\r\n    customer.id,\r\n    { name: \"\", id: customer.id, email: \"\" } as customer,\r\n    18000000\r\n  );\r\n  res.cookie(\"customerID\", customer.id);\r\n  const { startDate, endDate, quantity, productID } = req.body;\r\n\r\n  const daysRented = Math.max(startDate - endDate, 1);\r\n\r\n  const product = (await cache.getAsync(productID, async () => {\r\n    return await db.get(\"SELECT * FROM products WHERE id = ?\", productID);\r\n  })) as product;\r\n\r\n  const total = product.price * quantity * daysRented;\r\n  cache.set(`tempcache-${customer.id}`, {\r\n    acc: req.cookies.session,\r\n    secret: intent.client_secret,\r\n    product,\r\n    info: { quantity, daysRented },\r\n  });\r\n  res.redirect(\"/checkout\");\r\n});\r\n\r\n// * GET REQUESTS\r\napp.get(\"/logout\", async (req, res) => {\r\n  res.clearCookie(\"session\");\r\n  res.redirect(\"/\");\r\n});\r\napp.get(\"\");\r\n\r\napp.listen(80, () => {\r\n  console.log(\"Server running...\");\r\n  console.log(\"\");\r\n});\r\n", "import sqlite from \"sqlite3\";\r\nsqlite.verbose();\r\n\r\nclass Database {\r\n  _db: sqlite.Database;\r\n\r\n  constructor(path: string) {\r\n    this._db = new sqlite.Database(path);\r\n    this._db.run(\"PRAGMA journal_mode = WAL\");\r\n  }\r\n\r\n  run(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.run(\r\n        query,\r\n        ...params,\r\n        function (this: any, err: Error | null) {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            resolve(this);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  get(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.get(query, ...params, (err: Error | null, row: any) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(row);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  all(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.all(query, ...params, (err: Error | null, rows: any[]) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(rows);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  exec(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.exec(query, (err: Error | null) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(this);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport { Database };\r\n", "interface Cache {\r\n  [key: string]: any;\r\n}\r\nconst defaultCacheExpiration = 900000;\r\nclass CacheLayer {\r\n  _cache: Cache = {};\r\n  all() {\r\n    return this._cache;\r\n  }\r\n\r\n  get(\r\n    key: string,\r\n    func: Function,\r\n    expiration: number = defaultCacheExpiration\r\n  ) {\r\n    let val = this._cache[key];\r\n    if (val == undefined) {\r\n      val = func();\r\n      this.set(key, val, expiration);\r\n    }\r\n    return val;\r\n  }\r\n\r\n  async getAsync(\r\n    key: string,\r\n    func: Function,\r\n    expiration: number = defaultCacheExpiration\r\n  ) {\r\n    let val = this._cache[key];\r\n    if (val == undefined) {\r\n      val = func();\r\n      this.set(key, val, expiration);\r\n    }\r\n    return val;\r\n  }\r\n\r\n  set(key: string, val: any, expiration: number = defaultCacheExpiration) {\r\n    this._cache[key] = val;\r\n    setTimeout(() => {\r\n      this.del(key);\r\n    }, expiration);\r\n  }\r\n\r\n  del(key: string) {\r\n    delete this._cache[key];\r\n  }\r\n\r\n  flush() {\r\n    this._cache = {};\r\n  }\r\n\r\n  exists(key: string) {\r\n    return this._cache[key] != undefined;\r\n  }\r\n}\r\n\r\nexport { CacheLayer };\r\n"],
  "mappings": "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",
  "names": []
}
