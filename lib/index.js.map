{
  "version": 3,
  "sources": ["../app/database.ts", "../app/index.ts"],
  "sourcesContent": ["import sqlite from \"sqlite3\";\r\nsqlite.verbose();\r\n\r\nclass Database {\r\n  _db: sqlite.Database;\r\n\r\n  constructor(path: string) {\r\n    this._db = new sqlite.Database(path);\r\n    console.log(JSON.stringify(this._db.run(\"PRAGMA journal_mode = WAL\")));\r\n  }\r\n\r\n  run(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.run(\r\n        query,\r\n        params.params,\r\n        function (this: any, err: Error | null) {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            resolve(this);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  get(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.get(query, params.params, (err: Error | null, row: any) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(row);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  all(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.all(query, params.params, (err: Error | null, rows: any[]) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(rows);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  exec(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.exec(query, (err: Error | null) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(this);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport { Database };\r\n", "//Database setup\r\nimport {Database} from './database';\r\n\r\n//Types for database\r\nimport { order, account, customer, product } from \"./types\";\r\n\r\nconst db = new Database('database/partyshare.db');\r\n\r\n//Express imports\r\nimport express from \"express\";\r\nimport cookieParser from \"cookie-parser\";\r\n\r\nconst app = express();\r\n\r\n//Express addons for parsing data from the request\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(cookieParser());\r\n\r\n\r\n\r\n// you would have to import / invoke this in another file\r\n//Express view engine setuo\r\napp.set(\"view-engine\", \"ejs\");\r\napp.use(\"/views\", express.static(\"views\"));\r\n\r\napp.get(\"/\", async (req, res) => {\r\n  res.render(\"homepage/index.ejs\");\r\n});\r\n\r\napp.listen(80, () => {\r\n  console.log(\"Server running...\");\r\n  console.log(\"\");\r\n});\r\n"],
  "mappings": "ohBAAA,MAAmB,sBACnB,UAAO,UAEP,WAAe,CAGb,YAAY,EAAc,CACxB,KAAK,IAAM,GAAI,WAAO,SAAS,GAC/B,QAAQ,IAAI,KAAK,UAAU,KAAK,IAAI,IAAI,+BAG1C,IAAI,KAAkB,EAAa,CACjC,MAAO,IAAI,SAAQ,CAAC,EAAS,IAAW,CACtC,KAAK,IAAI,IACP,EACA,EAAO,OACP,SAAqB,EAAmB,CACtC,AAAI,EACF,EAAO,GAEP,EAAQ,UAOlB,IAAI,KAAkB,EAAa,CACjC,MAAO,IAAI,SAAQ,CAAC,EAAS,IAAW,CACtC,KAAK,IAAI,IAAI,EAAO,EAAO,OAAQ,CAAC,EAAmB,IAAa,CAClE,AAAI,EACF,EAAO,GAEP,EAAQ,OAMhB,IAAI,KAAkB,EAAa,CACjC,MAAO,IAAI,SAAQ,CAAC,EAAS,IAAW,CACtC,KAAK,IAAI,IAAI,EAAO,EAAO,OAAQ,CAAC,EAAmB,IAAgB,CACrE,AAAI,EACF,EAAO,GAEP,EAAQ,OAMhB,KAAK,KAAkB,EAAa,CAClC,MAAO,IAAI,SAAQ,CAAC,EAAS,IAAW,CACtC,KAAK,IAAI,KAAK,EAAO,AAAC,GAAsB,CAC1C,AAAI,EACF,EAAO,GAEP,EAAQ,YChDlB,MAAoB,sBACpB,EAAyB,4BAJnB,EAAK,GAAI,GAAS,0BAMlB,EAAM,gBAGZ,EAAI,IAAI,UAAQ,QAChB,EAAI,IAAI,UAAQ,WAAW,CAAE,SAAU,MACvC,EAAI,IAAI,iBAMR,EAAI,IAAI,cAAe,OACvB,EAAI,IAAI,SAAU,UAAQ,OAAO,UAEjC,EAAI,IAAI,IAAK,MAAO,EAAK,IAAQ,CAC/B,EAAI,OAAO,wBAGb,EAAI,OAAO,GAAI,IAAM,CACnB,QAAQ,IAAI,qBACZ,QAAQ,IAAI",
  "names": []
}
