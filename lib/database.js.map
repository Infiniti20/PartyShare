{
  "version": 3,
  "sources": ["../app/database.ts"],
  "sourcesContent": ["import sqlite from \"sqlite3\";\r\nsqlite.verbose();\r\n\r\nclass Database {\r\n  _db: sqlite.Database;\r\n\r\n  constructor(path: string) {\r\n    this._db = new sqlite.Database(path);\r\n    this._db.run(\"PRAGMA journal_mode = WAL\");\r\n  }\r\n\r\n  run(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.run(\r\n        query,\r\n        params.params,\r\n        function (this: any, err: Error | null) {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            resolve(this);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  get(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.get(query, params.params, (err: Error | null, row: any) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(row);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  all(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.all(query, params.params, (err: Error | null, rows: any[]) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(rows);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  exec(query: string, ...params: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this._db.exec(query, (err: Error | null) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(this);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport { Database };\r\n"],
  "mappings": "mlBAAA,kCAAmB,sBACnB,UAAO,UAEP,WAAe,CAGb,YAAY,EAAc,CACxB,KAAK,IAAM,GAAI,WAAO,SAAS,GAC/B,KAAK,IAAI,IAAI,6BAGf,IAAI,KAAkB,EAAa,CACjC,MAAO,IAAI,SAAQ,CAAC,EAAS,IAAW,CACtC,KAAK,IAAI,IACP,EACA,EAAO,OACP,SAAqB,EAAmB,CACtC,AAAI,EACF,EAAO,GAEP,EAAQ,UAOlB,IAAI,KAAkB,EAAa,CACjC,MAAO,IAAI,SAAQ,CAAC,EAAS,IAAW,CACtC,KAAK,IAAI,IAAI,EAAO,EAAO,OAAQ,CAAC,EAAmB,IAAa,CAClE,AAAI,EACF,EAAO,GAEP,EAAQ,OAMhB,IAAI,KAAkB,EAAa,CACjC,MAAO,IAAI,SAAQ,CAAC,EAAS,IAAW,CACtC,KAAK,IAAI,IAAI,EAAO,EAAO,OAAQ,CAAC,EAAmB,IAAgB,CACrE,AAAI,EACF,EAAO,GAEP,EAAQ,OAMhB,KAAK,KAAkB,EAAa,CAClC,MAAO,IAAI,SAAQ,CAAC,EAAS,IAAW,CACtC,KAAK,IAAI,KAAK,EAAO,AAAC,GAAsB,CAC1C,AAAI,EACF,EAAO,GAEP,EAAQ",
  "names": []
}
